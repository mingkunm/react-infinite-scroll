[{"/Users/mingkun/Desktop/Assessment/react-infinite-scroll/src/index.js":"1","/Users/mingkun/Desktop/Assessment/react-infinite-scroll/src/components/App.js":"2","/Users/mingkun/Desktop/Assessment/react-infinite-scroll/src/components/users/index.js":"3","/Users/mingkun/Desktop/Assessment/react-infinite-scroll/src/components/users/show.js":"4","/Users/mingkun/Desktop/Assessment/react-infinite-scroll/src/components/users/list/followersList.js":"5","/Users/mingkun/Desktop/Assessment/react-infinite-scroll/src/components/users/list/reposList.js":"6","/Users/mingkun/Desktop/Assessment/react-infinite-scroll/src/utils/axios.js":"7","/Users/mingkun/Desktop/Assessment/react-infinite-scroll/src/config/index.js":"8","/Users/mingkun/Desktop/Assessment/react-infinite-scroll/src/utils/findNextUrl.js":"9"},{"size":158,"mtime":1608078295197,"results":"10","hashOfConfig":"11"},{"size":182,"mtime":1607753814135,"results":"12","hashOfConfig":"11"},{"size":4071,"mtime":1608144594218,"results":"13","hashOfConfig":"11"},{"size":2842,"mtime":1608145658110,"results":"14","hashOfConfig":"11"},{"size":2866,"mtime":1608144605238,"results":"15","hashOfConfig":"11"},{"size":2599,"mtime":1608148115808,"results":"16","hashOfConfig":"11"},{"size":228,"mtime":1608106823766,"results":"17","hashOfConfig":"11"},{"size":71,"mtime":1608147435375,"results":"18","hashOfConfig":"11"},{"size":295,"mtime":1608103973643,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1kfamc8",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"/Users/mingkun/Desktop/Assessment/react-infinite-scroll/src/index.js",[],["42","43"],"/Users/mingkun/Desktop/Assessment/react-infinite-scroll/src/components/App.js",[],"/Users/mingkun/Desktop/Assessment/react-infinite-scroll/src/components/users/index.js",["44"],"import React, { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport UserDetail from \"./show\";\nimport api from \"../../utils/axios\";\nimport getNextUrl from \"../../utils/findNextUrl\";\n\nexport default function UserIndex() {\n  const [users, setUsers] = useState([]);\n  const [search, setSearch] = useState(null);\n  const [nextUrl, setNextUrl] = useState(\"users?since=0\");\n  const [detail, setDetail] = useState();\n  const [detailDisplay, setDetailDisplay] = useState({\n    index: \"block\",\n    show: \"none\",\n  });\n\n  useEffect(() => {\n    getInitialList();\n  }, []);\n\n  // Get initial users list for the first time\n  const getInitialList = async () => {\n    fetchAndSetUserDetails();\n  };\n\n  // Handle search users by user name\n  const handleInput = (e) => {\n    let target = e.target.value;\n\n    if (target === \"\") {\n      setSearch(null);\n    } else {\n      let resultList = [];\n      const searchUser = new Promise((resolve) => {\n        users.forEach((item, index, array) => {\n          const name = item.name;\n          if (name && name.toLowerCase().includes(target.toLowerCase())) {\n            resultList.push(item);\n          }\n          if (index === array.length - 1) resolve(resultList);\n        });\n      });\n\n      searchUser.then((res) => {\n        if (res.length > 0) {\n          setSearch(res);\n        } else {\n          setSearch([null]);\n        }\n      });\n    }\n  };\n\n  // Fetch more data when scroll to bottom\n  const fetchMoreData = () => {\n    fetchAndSetUserDetails();\n  };\n\n  // Fetch name... information of each user\n  const fetchAndSetUserDetails = async () => {\n    const requestsList = [];\n\n    const newUsers = await api.get(nextUrl);\n    setNextUrl(getNextUrl(newUsers.headers.link));\n\n    newUsers.data.forEach((item) => {\n      requestsList.push(api.get(`users/${item.login}`));\n    });\n\n    Promise.all(requestsList)\n      .then((res) => {\n        const temp = [];\n        res.forEach((item) => {\n          temp.push(item.data);\n        });\n        return temp;\n      })\n      .then((res) => {\n        setUsers([...users, ...res]);\n      });\n  };\n\n  // Handle user index & detail display\n  const handleUserDetail = (user) => {\n    setDetail(user);\n    setDetailDisplay({\n      index: \"none\",\n      show: \"block\",\n    });\n  };\n\n  // Eash record display\n  const cardContent = (user) => {\n    if (user) {\n      return (\n        <div style={{ display: \"flex\" }} onClick={() => handleUserDetail(user)}>\n          <img\n            src={user.avatar_url}\n            alt=\"Avatar\"\n            className=\"bar-item circle\"\n            style={{ width: \"85px\" }}\n          ></img>\n          <div className=\"card-content\">\n            <div className=\"bar-item\" style={{ fontWeight: \"bold\" }}>\n              {user.name || <span>N/A</span>}\n            </div>\n            <div className=\"bar-item\">{user.location || <span>N/A</span>}</div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <div className=\"search-result-none\">no match!</div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className=\"paper\">\n      <div style={{ display: detailDisplay.index }}>\n        <input\n          type=\"text\"\n          placeholder=\"Search by user name...\"\n          onChange={handleInput}\n        ></input>\n        <ul>\n          <InfiniteScroll\n            dataLength={users.length}\n            next={fetchMoreData}\n            hasMore={detailDisplay.index === \"block\"}\n            loader={<div className=\"loader\"></div>}\n          >\n            {search\n              ? search.map((item, index) => (\n                  <li key={index}>{cardContent(item)}</li>\n                ))\n              : users.map((item, index) => (\n                  <li key={index}>{cardContent(item)}</li>\n                ))}\n          </InfiniteScroll>\n        </ul>\n      </div>\n      <div style={{ display: detailDisplay.show, padding: \"16px\" }}>\n        {detail ? (\n          <UserDetail user={detail} setOpen={setDetailDisplay} />\n        ) : null}\n      </div>\n    </div>\n  );\n}\n","/Users/mingkun/Desktop/Assessment/react-infinite-scroll/src/components/users/show.js",[],"/Users/mingkun/Desktop/Assessment/react-infinite-scroll/src/components/users/list/followersList.js",["45"],"import React, { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport api from \"../../../utils/axios\";\nimport getNextUrl from \"../../../utils/findNextUrl\";\n\nexport default function ReposList({ initialUrl, setOpen }) {\n  const [users, setUsers] = useState([]);\n  const [nextUrl, setNextUrl] = useState(initialUrl);\n  const [hasMore, setHasMore] = useState(true);\n\n  useEffect(() => {\n    getInitialList();\n  }, []);\n\n  // Get initial repos list for the first time\n  const getInitialList = async () => {\n    fetchFollowersList();\n  };\n\n  // Fetch more data when scroll to bottom\n  const fetchMoreData = () => {\n    fetchFollowersList();\n  };\n\n  // Fetch repos list\n  const fetchFollowersList = async () => {\n    const requestsList = [];\n\n    const newUsers = await api.get(nextUrl);\n    if (newUsers.headers.link) {\n      const temp = getNextUrl(newUsers.headers.link);\n      if (temp) {\n        setNextUrl(getNextUrl(newUsers.headers.link));\n      } else {\n        setHasMore(false);\n      }\n    }\n\n    newUsers.data.forEach((item) => {\n      requestsList.push(api.get(`users/${item.login}`));\n    });\n\n    Promise.all(requestsList)\n      .then((res) => {\n        const temp = [];\n        res.forEach((item) => {\n          temp.push(item.data);\n        });\n        return temp;\n      })\n      .then((res) => {\n        setUsers([...users, ...res]);\n      });\n  };\n\n  // Display detail of each repo\n  const cardContent = (user) => {\n    return (\n      <div className=\"list-item\">\n        <div style={{ display: \"flex\" }}>\n          <img\n            src={user.avatar_url}\n            alt=\"Avatar\"\n            className=\"bar-item circle\"\n            style={{ width: \"85px\" }}\n          ></img>\n          <div className=\"card-content\">\n            <div className=\"bar-item\" style={{ fontWeight: \"bold\" }}>\n              {user.name || <span>N/A</span>}\n            </div>\n            <div className=\"bar-item\">{user.location || <span>N/A</span>}</div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <span className=\"modal-close\" onClick={() => setOpen(\"none\")}>\n        &times;\n      </span>\n      <h2 className=\"list-header\">Followers Lists</h2>\n      <ul className=\"scroll-list\">\n        <InfiniteScroll\n          dataLength={users.length}\n          next={fetchMoreData}\n          hasMore={hasMore}\n          loader={<div className=\"loader\"></div>}\n          scrollableTarget=\"scrollableDiv\"\n        >\n          {users.map((item, index) => (\n            <li key={index}>\n              <a\n                href={item.html_url}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                className=\"list-link\"\n              >\n                {cardContent(item)}\n              </a>\n            </li>\n          ))}\n        </InfiniteScroll>\n      </ul>\n    </>\n  );\n}\n","/Users/mingkun/Desktop/Assessment/react-infinite-scroll/src/components/users/list/reposList.js",["46"],"/Users/mingkun/Desktop/Assessment/react-infinite-scroll/src/utils/axios.js",[],"/Users/mingkun/Desktop/Assessment/react-infinite-scroll/src/config/index.js",[],"/Users/mingkun/Desktop/Assessment/react-infinite-scroll/src/utils/findNextUrl.js",["47"],"export default function (link) {\n  let rawUrl = \"\";\n  const urls = link.split(\",\");\n\n  for (const section of urls) {\n    if (section.split(\";\")[1].includes(\"next\")) {\n      rawUrl = section.split(\";\")[0];\n      break;\n    }\n  }\n\n  return rawUrl.trim().substring(24, rawUrl.trim().length - 1);\n}\n",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":20,"column":6,"nodeType":"54","endLine":20,"endColumn":8,"suggestions":"55"},{"ruleId":"52","severity":1,"message":"53","line":14,"column":6,"nodeType":"54","endLine":14,"endColumn":8,"suggestions":"56"},{"ruleId":"52","severity":1,"message":"53","line":14,"column":6,"nodeType":"54","endLine":14,"endColumn":8,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":1,"nodeType":"60","endLine":13,"endColumn":2},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getInitialList'. Either include it or remove the dependency array.","ArrayExpression",["63"],["64"],["65"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},{"desc":"66","fix":"68"},{"desc":"66","fix":"69"},"Update the dependencies array to be: [getInitialList]",{"range":"70","text":"71"},{"range":"72","text":"71"},{"range":"73","text":"71"},[610,612],"[getInitialList]",[462,464],[462,464]]